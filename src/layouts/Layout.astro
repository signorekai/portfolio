---
import Eyes from "../components/Eyes.astro";
import "../styles/base.css";

interface Props {
  title: string;
}

const { title = "" } = Astro.props;
---

<!doctype html>
<html lang="en" class="overscroll-none">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="theme-color" content="#000" />
    <meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href="https://use.typekit.net/cvj8baw.css" />
    <title>{title}</title>
  </head>
  <body>
    <div
      class="fixed z-9999 transition-transform duration-0 translate-x-0 translate-y-0 pointer-events-none"
      x-bind="cursor"
      x-data="Cursor"
    >
      <Eyes
        reverse={true}
        className="-translate-x-1/2 -translate-y-1/2 hidden lg:block lg:!w-20 lg:!h-20 text-peach-light"
      />
    </div>
    <slot />
  </body>
</html>

<script>
  import Alpine from "alpinejs";
  document.addEventListener("alpine:init", () => {
    Alpine.data("Cursor", () => ({
      cursorPosition: { x: 0, y: 0 },
      throttledListener: null,
      cursor: {
        ["@mousemove.window.throttle.16ms.passive"](e) {
          this.$data.cursorPosition.x = e.clientX;
          this.$data.cursorPosition.y = e.clientY;
        },
        ["@cursor-change.camel.window"]({ detail }) {
          if (detail.hasOwnProperty("className")) {
            if (detail.className.hasOwnProperty("toggle")) {
              detail.className.toggle.every((className) => {
                this.$el.classList.toggle(className);
                return true;
              });
            }
            if (detail.className.hasOwnProperty("add")) {
              this.$el.classList.add(...detail.className.add);
            }
            if (detail.className.hasOwnProperty("remove")) {
              this.$el.classList.remove(...detail.className.remove);
            }
          }
        },
        [":style"]() {
          return {
            "--tw-translate-x": `${this.$data.cursorPosition.x}px`,
            "--tw-translate-y": `${this.$data.cursorPosition.y}px`,
          };
        },
      },
    }));
  });
</script>
